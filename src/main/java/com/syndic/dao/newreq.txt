CREATE TABLE users (
    id INT NOT NULL AUTO_INCREMENT,
    u_name VARCHAR(50),
    u_pwd VARCHAR(255),
    u_email VARCHAR(50),
    u_mobile VARCHAR(20),
    checkadmin INT NOT NULL,
    u_apartment_number VARCHAR(20),
    u_building_number VARCHAR(20),
    u_phone_number VARCHAR(20),
    PRIMARY KEY (id)
);
CREATE TABLE syndics (
    s_id INT AUTO_INCREMENT PRIMARY KEY,
    s_firstname VARCHAR(50),
    s_lastname VARCHAR(50),
    s_codepostal VARCHAR(10),
    s_phonenumber VARCHAR(15),
    s_fulladdress VARCHAR(255),
    s_mail VARCHAR(255),
    s_iduser INT,
    residence_name VARCHAR(50) UNIQUE,
    residence_address VARCHAR(100),
    residence_type VARCHAR(50),
    residence_size INT,
    apartment_count INT,
    villa_count INT,
    garden_count INT,
    pool_count INT,
    parking_count INT,
    elevators_count INT,
    security_system BOOLEAN,
    FOREIGN KEY (s_iduser) REFERENCES users(id)
);

CREATE TABLE members (
    m_id INT AUTO_INCREMENT PRIMARY KEY,
    m_firstname VARCHAR(50),
    m_lastname VARCHAR(50),
    m_codepostal VARCHAR(10),
    m_phonenumber VARCHAR(15),
    m_fulladdress VARCHAR(255),
    m_mail VARCHAR(255),
    m_iduser INT,
    member_s_id INT,
    property_code INT UNIQUE,
    property_address VARCHAR(250),
    property_type VARCHAR(50),
    property_size INT,
    coOwnershipFee INT,
    FOREIGN KEY (m_iduser) REFERENCES users(id)
);
ALTER TABLE syndic_db.members
ADD CONSTRAINT FOREIGN KEY (member_s_id) REFERENCES syndics(s_id);



CREATE TABLE syndic_db.meetings (
    meeting_id INT AUTO_INCREMENT PRIMARY KEY,
    meeting_date DATE,
    meeting_time VARCHAR(50),
    meeting_topic TEXT,
    meeting_location TEXT,
    meeting_type VARCHAR(50),
    meeting_residence VARCHAR(50),
    meeting_conclusion TEXT,
    meeting_s_id INT, -- Ajout de la colonne syndic_id pour la référence au syndic
    FOREIGN KEY (meeting_s_id) REFERENCES syndics(s_id) -- Clé étrangère liée à la table des syndics
);

CREATE TABLE payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    payment_code VARCHAR(50),
    payment_date DATE ,
    payment_amount DECIMAL(10, 2),
    payment_method VARCHAR(50),
    payment_type VARCHAR(50),
    payment_account_id INT,
    payment_member_id INT,
    payment_status VARCHAR(50)
);

CREATE TABLE suppliers (
    supplier_id INT AUTO_INCREMENT PRIMARY KEY,
    supplier_name VARCHAR(150),
    supplier_email VARCHAR(250),
    supplier_phone VARCHAR(50),
    supplier_type VARCHAR(250),
    supplier_active BOOLEAN,
    supplier_rating VARCHAR(50),
    supplier_s_id INT
);


CREATE TABLE syndic_db.incidents (
    incident_id INT PRIMARY KEY AUTO_INCREMENT,
    incident_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    incident_type VARCHAR(50) NOT NULL,
    incident_description TEXT,
    incident_status VARCHAR(20) NOT NULL,
    incident_resolution_date DATE,
    incident_s_id INT NOT NULL,
    FOREIGN KEY (incident_s_id) REFERENCES syndics(s_id)
);

CREATE TABLE syndic_db.News_communication (
    news_id INT AUTO_INCREMENT PRIMARY KEY,
    news_title VARCHAR(255) NOT NULL,
    news_content TEXT NOT NULL,
    news_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    news_category VARCHAR(100),
    news_attachment VARCHAR(255),
    news_s_id INT NOT NULL,
    FOREIGN KEY (news_s_id) REFERENCES syndics(s_id));

CREATE TABLE syndic_db.charges (
    charges_id INT AUTO_INCREMENT PRIMARY KEY,
    charge_code VARCHAR(50)
    charge_name VARCHAR(50),
    charge_description TEXT,
    charge_amount DECIMAL(10, 2),
    charge_frequency VARCHAR(50),
    charge_category VARCHAR(50),
    charge_due_month VARCHAR(50)
 );

INSERT INTO syndic_db.charges (charge_code, charge_name, charge_description, charge_amount, charge_frequency, charge_category, charge_due_month)
VALUES
('MNT-001', 'Entretien des espaces verts', 'Entretien des jardins et espaces verts', 800.00, 'Mensuelle', 'Entretien', '01'),
('RPR-001', 'Réparation des équipements', 'Réparation des équipements communs', 1200.00, 'Trimestrielle', 'Réparation', '01'),
('ELE-001', 'Électricité des parties communes', 'Éclairage et électricité des espaces communs', 1000.00, 'Mensuelle', 'Électricité', '01'),
('DCH-001', 'Gestion des déchets', 'Service de collecte et gestion des déchets', 700.00, 'Mensuelle', 'Déchets', '01'),
('ASS-001', 'Assurance bâtiment', 'Assurance pour les parties communes du bâtiment', 2000.00, 'Annuelle', 'Assurance', '31'),
('GST-001', 'Frais de gestion', 'Frais pour la gestion administrative de la résidence', 1500.00, 'Mensuelle', 'Gestion', '01'),
('NTL-001', 'Nettoyage des piscines', 'Service de nettoyage et entretien des piscines', 600.00, 'Mensuelle', 'Nettoyage', '01'),
('MNT-002', 'Maintenance des équipements de gym', 'Entretien des équipements de la salle de sport', 900.00, 'Trimestrielle', 'Maintenance', '01'),
('SEC-001', 'Sécurité incendie', 'Installation et maintenance des équipements de sécurité incendie', 3000.00, 'Annuelle', 'Sécurité', '31'),
('SEC-002', 'Système de surveillance', 'Maintenance du système de surveillance CCTV', 1500.00, 'Trimestrielle', 'Sécurité', '01');

CREATE TABLE syndic_db.expenses (
    expense_id INT AUTO_INCREMENT PRIMARY KEY,
    expense_code VARCHAR(50),
    expense_supplier_id INT,
    expense_amount DECIMAL(10, 2),
    expense_category VARCHAR(100),
    expense_payment_date DATE,
    expense_task_or_charge INT,
    expense_task_id INT,
    expense_charge_id INT,
    FOREIGN KEY (expense_charge_id) REFERENCES charges(charges_id)
);
CREATE TABLE syndic_db.Tasks (
    task_id INT AUTO_INCREMENT PRIMARY KEY,
    task_name VARCHAR(50),
    task_description VARCHAR(50),
    task_due_date DATE,
    task_status VARCHAR(50),
    task_s_id INT,
    task_created DATE
);

CREATE TABLE syndic_db.accounts (
    account_id INT AUTO_INCREMENT PRIMARY KEY,
    account_number INT,
    account_type VARCHAR(50),
    account_balance DECIMAL(10,2),
    account_created_at DATE,
    account_syndic_id INT,
    FOREIGN KEY (account_syndic_id) REFERENCES syndics(s_id)
);