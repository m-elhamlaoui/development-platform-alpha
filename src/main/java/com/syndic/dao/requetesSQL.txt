
USE syndic_db;


ALTER TABLE users
ADD COLUMN checkadmin TINYINT(1) NOT NULL;

ALTER TABLE syndic_db.users
MODIFY COLUMN checkadmin int;

UPDATE users
SET checkadmin = 1
WHERE id = 1;
select * from reclamations;
CREATE TABLE reclamations (
    id_reclamation INT AUTO_INCREMENT PRIMARY KEY,
    sujet VARCHAR(255),
    description TEXT,
    date_soumission TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_user INT,
    FOREIGN KEY (id_user) REFERENCES users(id)
);

CREATE TABLE paiement (
    id_paiement INT AUTO_INCREMENT PRIMARY KEY,
    mois VARCHAR(20) NOT NULL,
    paye BOOLEAN NOT NULL,
    id_user INT,
    FOREIGN KEY (id_user) REFERENCES users(id)
);


DROP TABLE IF EXISTS users;
CREATE TABLE users (
    id INT NOT NULL AUTO_INCREMENT,
    u_name VARCHAR(50),
    u_pwd VARCHAR(255),
    u_email VARCHAR(50),
    u_mobile VARCHAR(20),
    checkadmin TINYINT(1) NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE users
ADD COLUMN u_apartment_number VARCHAR(20),
ADD COLUMN u_building_number VARCHAR(20),
ADD COLUMN u_phone_number VARCHAR(20);

CREATE TABLE members (
    m_id INT AUTO_INCREMENT PRIMARY KEY,
    m_firstname VARCHAR(50),
    m_lastname VARCHAR(50),
    m_codepostal VARCHAR(10),
    m_phonenumber VARCHAR(15),
    m_fulladdress VARCHAR(255),
    m_mail VARCHAR(255),
    m_iduser INT,
    FOREIGN KEY (m_iduser) REFERENCES users(id)
);

CREATE TABLE syndics (
    s_id INT AUTO_INCREMENT PRIMARY KEY,
    s_firstname VARCHAR(50),
    s_lastname VARCHAR(50),
    s_codepostal VARCHAR(10),
    s_phonenumber VARCHAR(15),
    s_fulladdress VARCHAR(255),
    s_mail VARCHAR(255),
    s_iduser INT,
    FOREIGN KEY (s_iduser) REFERENCES users(id)
);


CREATE TABLE syndic_db.meetings (
    meeting_id INT AUTO_INCREMENT PRIMARY KEY,
    meeting_date DATE,
    meeting_time VARCHAR(50),
    meeting_topic TEXT,
    meeting_location TEXT,
    meeting_type VARCHAR(50),
    meeting_residence VARCHAR(50),
    meeting_conclusion TEXT,
    meeting_s_id INT, -- Ajout de la colonne syndic_id pour la référence au syndic
    FOREIGN KEY (meeting_s_id) REFERENCES Syndics(s_id) -- Clé étrangère liée à la table des syndics
);

CREATE TABLE Payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    payment_code VARCHAR(50),
    payment_date DATE ,
    payment_amount DECIMAL(10, 2),
    payment_method VARCHAR(50),
    payment_type VARCHAR(50),
    payment_account_id INT,
    payment_member_id INT,
    payment_status VARCHAR(50)
);

CREATE TABLE Suppliers (
    supplier_id INT AUTO_INCREMENT PRIMARY KEY,
    supplier_name VARCHAR(150),
    supplier_email VARCHAR(250),
    supplier_phone VARCHAR(50),
    supplier_type VARCHAR(250),
    supplier_active BOOLEAN,
    supplier_rating VARCHAR(50),
    supplier_s_id INT
);


CREATE TABLE syndic_db.Incidents (
    incident_id INT PRIMARY KEY AUTO_INCREMENT,
    incident_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    incident_type VARCHAR(50) NOT NULL,
    incident_description TEXT,
    incident_status VARCHAR(20) NOT NULL,
    incident_resolution_date DATE,
    incident_s_id INT NOT NULL,
    FOREIGN KEY (incident_s_id) REFERENCES Syndics(s_id)
);

ALTER TABLE syndic_db.members
ADD COLUMN member_s_id INT,
ADD CONSTRAINT FOREIGN KEY (member_s_id) REFERENCES Syndics(s_id);

========================================================================================================================
pour target Syndic.war
C:\Users\amine\Desktop\amine\S4\DevOps\development-platform-alpha-deploy> mvn clean package

C:\Users\amine\Desktop\amine\S4\DevOps\development-platform-alpha-deploy> docker build -t syndic .

C:\Users\amine\Desktop\amine\S4\DevOps\development-platform-alpha-deploy> docker run -d -p 8080:8080 syndic

========================================================================================================================
ALTER TABLE syndics
ADD COLUMN residence_name VARCHAR(50) UNIQUE,
ADD COLUMN residence_address VARCHAR(100),
ADD COLUMN residence_type VARCHAR(50),
ADD COLUMN residence_size INT,
ADD COLUMN apartment_count INT,
ADD COLUMN villa_count INT,
ADD COLUMN garden_count INT,
ADD COLUMN pool_count INT,
ADD COLUMN parking_count INT,
ADD COLUMN elevators_count INT,
ADD COLUMN security_system BOOLEAN;
